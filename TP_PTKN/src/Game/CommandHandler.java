package Game;

import Entities.*;
import Map.Tile;
import java.util.Scanner;

public class CommandHandler {
    private Hero hero;
    private Player player;
    private Castle castle;
    private Scanner scanner;
    private Tile[][] map;

    public CommandHandler(Hero hero, Player player, Castle castle, Scanner scanner, Tile[][] map) {
        this.hero = hero;
        this.player = player;
        this.castle = castle;
        this.scanner = scanner;
        this.map = map;
    }

    public void handleCommand(String command) {
        switch (command.toUpperCase()) {
            case "W": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö
            case "A": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ª–µ–≤–æ
            case "S": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–Ω–∏–∑
            case "D": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ
            case "WD": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ –≤–≤–µ—Ä—Ö
            case "SD": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ –≤–Ω–∏–∑
            case "WA": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ª–µ–≤–æ –≤–≤–µ—Ä—Ö
            case "SA": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ª–µ–≤–æ –≤–Ω–∏–∑
                handlePlayerMove(command);
                break;
            case "B": // –ü–æ–∫—É–ø–∫–∞ –∑–¥–∞–Ω–∏—è
                handleBuyBuilding();
                break;
            case "T": // –ù–∞–µ–º –≤–æ–∏–Ω–æ–≤
                handleRecruitUnit();
                break;
            case "E":
                Game.turn+=1;
                Console.addEvent("–•–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–µ—Ä–µ—Ö–æ–¥ —Ö–æ–¥–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä—É!");
                hero.startNewTurn();
                break;
            case "ARMY":
                player.showArmy();
                break;
            case "BALANCE":
                Console.addEvent("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å: " + player.getGold());
                break;
            case "ICON":
                handleIcon();
                break;
            case "SAVE":
                break;
            default:
                Console.addEvent("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: " + command);
                break;
        }
    }

    private void handlePlayerMove(String command) {
        int dx = 0, dy = 0;
        switch (command) {
            case "W": dy = -1; break;
            case "A": dx = -1; break;
            case "S": dy = 1; break;
            case "D": dx = 1; break;
            case "WD": dx = 1; dy = -1; break;
            case "WA": dx = -1; dy = -1; break;
            case "SD": dx = 1; dy = 1; break;
            case "SA": dx = -1; dy = 1; break;
            default:
                System.out.println("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!");
                return;
        }

        hero.moveHero(map, dx, dy);
    }

    private void handleBuyBuilding() {
        if(hero.getX()!=0 || hero.getY()!=0){
            Console.addEvent("–ì–µ—Ä–æ–π –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫—Ä–µ–ø–æ—Å—Ç–∏!");
            return;
        }

        System.out.println("üîπ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–¥–∞–Ω–∏—è:");
        System.out.println("1. –°—Ç–æ—Ä–æ–∂–µ–≤–æ–π –ø–æ—Å—Ç (1000 –∑–æ–ª–æ—Ç–∞)");
        System.out.println("2. –ë–∞—à–Ω—è –∞—Ä–±–∞–ª–µ—Ç—á–∏–∫–æ–≤ (1500 –∑–æ–ª–æ—Ç–∞)");
        System.out.println("3. –û—Ä—É–∂–µ–π–Ω–∞—è (2000 –∑–æ–ª–æ—Ç–∞)");
        System.out.println("4. –§–æ—Ä—Ç–ø–æ—Å—Ç (2500 –∑–æ–ª–æ—Ç–∞)");
        System.out.println("5. –°–æ–±–æ—Ä (3000 –∑–æ–ª–æ—Ç–∞)");
        System.out.println("6. –ê–ª—Ç–∞—Ä—å (5000 –∑–æ–ª–æ—Ç–∞)");
        System.out.print("üîπ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–¥–∞–Ω–∏—è: ");
        int choice = scanner.nextInt();
        scanner.nextLine();

        Building building = null;
        switch (choice) {
            case 1:
                building = new GuardPost();
                break;
            case 2:
                building = new Tower();
                break;
            case 3:
                building = new Armory();
                break;
            case 4:
                building = new FortPost();
                break;
            case 5:
                building = new Cathedral();
                break;
            case 6:
                building = new Altar();
                break;
            default:
                Console.addEvent("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –∑–¥–∞–Ω–∏—è.");
                return;
        }

        castle.build(building, player);
    }

    private void handleRecruitUnit() {
        if(hero.getX()!=0 || hero.getY()!=0){
            Console.addEvent("–ì–µ—Ä–æ–π –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫—Ä–µ–ø–æ—Å—Ç–∏!");
            return;
        }

        System.out.println("üîπ –î–æ—Å—Ç—É–ø–Ω—ã–µ —é–Ω–∏—Ç—ã:");
        for (PerkType type : player.getAvailableUnits()) {
            System.out.println("- " + type);
        }
        System.out.print("üîπ –í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø —é–Ω–∏—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, SPEARMAN): ");
        String unitTypeInput = scanner.nextLine().trim().toUpperCase();
        try {
            PerkType unitType = PerkType.valueOf(unitTypeInput);
            if (unitType == PerkType.HERO && player.recruitHero(castle, map)){
                Console.addEvent("üîπ –ì–µ—Ä–æ–π " + " —É—Å–ø–µ—à–Ω–æ –Ω–∞–Ω—è—Ç! " + "–î–µ–Ω–µ–≥ –æ—Å—Ç–∞–ª–æ—Å—å:"+player.getGold());
            } else if (hero.recruitUnit(unitType, hero.getX(), hero.getY())) {
                Console.addEvent("üîπ –Æ–Ω–∏—Ç " + unitType + " —É—Å–ø–µ—à–Ω–æ –Ω–∞–Ω—è—Ç! " + "–î–µ–Ω–µ–≥ –æ—Å—Ç–∞–ª–æ—Å—å:"+player.getGold());
            } else {
                Console.addEvent("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–Ω—è—Ç—å —é–Ω–∏—Ç–∞ " + unitType);
            }
        } catch (IllegalArgumentException e) {
            Console.addEvent("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —é–Ω–∏—Ç–∞!");
        }
    }

    private void handleIcon(){
        System.out.println("üîπ 1) (–î–µ—Ñ–æ–ª—Ç–Ω—ã–π) –ì—ç–Ω–¥–∞–ª—å—Ñ \uD83E\uDDD9\uD83C\uDFFB\u200D‚ôÇ\uFE0F ");
        System.out.println("üîπ 2) –ê—Ä—Ç–∞—Å \uD83E\uDDB8\u200D ");
        System.out.println("üîπ 3) –ê—Ä–Ω–æ–ª—å–¥ \uD83E\uDDB8\uD83C\uDFFB\u200D‚ôÇ\uFE0F ");
        System.out.println("üîπ 4) –í–æ–ª–∞–Ω-–¥–µ-–º–æ—Ä—Ç \uD83E\uDDB9\uD83C\uDFFB\u200D‚ôÇ\uFE0F ");
        System.out.println("üîπ 5) –î—Ä–∞–∫—É–ª–∞ \uD83E\uDDDB ");
        System.out.println("üîπ 6) –ó–µ–ª—å–¥–∞ \uD83E\uDDB8\uD83C\uDFFC\u200D‚ôÄ\uFE0F ");
        System.out.println("üîπ 7) –õ–∞—Ä–∞ –ö—Ä–æ—Ñ—Ç \uD83E\uDDB8 ");
        System.out.println("üîπ –í–≤–µ–¥–∏—Ç–µ id –∏–∫–æ–Ω–∫–∏ –∏–≥—Ä–æ–∫–∞: ");
        int id = scanner.nextInt();
        scanner.nextLine();

        if(id<1 || id>7){
            Console.addEvent("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –∏–∫–æ–Ω–∫–∏.");
            return;
        }

        Customise.changeIcon(hero, id);
    }
}