package PvP;

import Entities.Hero;
import Entities.Unit;
import Game.Console;
import Game.Game;
import Game.Player;

import java.util.List;
import java.util.Scanner;

public class pvpHandler {
    private Hero hero;
    private Hero computerHero;
    private Player player;
    private Scanner scanner;
    private pvpMapRender renderer;
    private List<Unit> playerUnits;
    private Unit selectedUnit;
    private pvpAttack attack;

    public pvpHandler(Hero hero, Hero computerHero, Player player, Scanner scanner, pvpMapRender renderer) {
        this.hero = hero;
        this.computerHero = computerHero;
        this.player = player;
        this.scanner = scanner;
        this.renderer = renderer;

        this.playerUnits = hero.getUnits();
    }

    public void handleCommand(String command) {
        switch (command.toUpperCase()) {
            case "SELECT":
                selectUnit();
                break;
            case "W": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö
            case "A": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ª–µ–≤–æ
            case "S": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–Ω–∏–∑
            case "D": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ
            case "WD": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ –≤–≤–µ—Ä—Ö
            case "SD": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ –≤–Ω–∏–∑
            case "WA": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ª–µ–≤–æ –≤–≤–µ—Ä—Ö
            case "SA": // –î–≤–∏–∂–µ–Ω–∏–µ –≤–ª–µ–≤–æ –≤–Ω–∏–∑
                handleMove(command);
                break;
            case "ATTACK":
                handleAttack();
                break;
            case "ARMY":
                showArmy();
                break;
            case "END":
                endTurn();
                break;
            default:
                Console.addEvent("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: " + command);
                break;
        }
    }

    private void selectUnit() {
        System.out.println("üîπ –î–æ—Å—Ç—É–ø–Ω—ã–µ —é–Ω–∏—Ç—ã:");
        for (int i = 0; i < playerUnits.size(); i++) {
            Unit unit = playerUnits.get(i);
            System.out.println((i + 1) + ". " + unit.getType() + " (X: " + unit.getX() + ", Y: " + unit.getY() + ")");
        }
        System.out.print("üîπ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —é–Ω–∏—Ç–∞: ");
        int choice = scanner.nextInt();
        scanner.nextLine();

        if (choice > 0 && choice <= playerUnits.size()) {
            selectedUnit = playerUnits.get(choice - 1);
            System.out.println("üîπ –í—ã–±—Ä–∞–Ω —é–Ω–∏—Ç: " + selectedUnit.getType());
        } else {
            System.out.println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!");
        }
    }

    private void handleMove(String command) {
        if (selectedUnit == null) {
            Console.addEvent("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —é–Ω–∏—Ç–∞!");
            return;
        }

        int dx = 0, dy = 0;
        switch (command.toUpperCase()) {
            case "W": dy = -1; break;
            case "A": dx = -1; break;
            case "S": dy = 1; break;
            case "D": dx = 1; break;
            case "WD": dx = 1; dy = -1; break;
            case "WA": dx = -1; dy = -1; break;
            case "SD": dx = 1; dy = 1; break;
            case "SA": dx = -1; dy = 1; break;
            default:
                Console.addEvent("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ!");
                return;
        }

        if(selectedUnit.getMoveDistance() <= 0){
            Console.addEvent("‚ùå –£ –¥–∞–Ω–Ω–æ–≥–æ —é–Ω–∏—Ç–∞ –Ω–µ—Ç –æ—á–∫–æ–≤ —Ö–æ–¥–∞!");
            return;
        }

        int newX = selectedUnit.getX() + dx;
        int newY = selectedUnit.getY() + dy;

        if(newX<0 || newY<0 || newX >= Game.MAP_SIZE || newY >= Game.MAP_SIZE){
            Console.addEvent("‚ùå –í—ã—Ö–æ–¥ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –∫–∞—Ä—Ç—ã!");
            return;
        }

        renderer.moveUnit(selectedUnit, newX, newY);
        selectedUnit.setMoveDistance(selectedUnit.getMoveDistance() - 1);
        Console.addEvent("üö∂‚Äç‚ôÇÔ∏è –Æ–Ω–∏—Ç " + selectedUnit.getType() + " –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª—Å—è –Ω–∞ (" + newX + ", " + newY + ").");
    }

    private void handleAttack() {
        if (selectedUnit == null) {
            Console.addEvent("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —é–Ω–∏—Ç–∞!");
            return;
        }

        System.out.println("üîπ –í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–ª–∏ (X Y): ");
        int targetX = scanner.nextInt();
        int targetY = scanner.nextInt();
        scanner.nextLine();

        attack = new pvpAttack(selectedUnit, computerHero, targetX, targetY, renderer);
    }

    private void showArmy() {
        Console.addEvent("üîπ –í–∞—à–∞ –∞—Ä–º–∏—è:");
        for (Unit unit : playerUnits) {
            Console.addEvent("- " + unit.getType() + " (X: " + unit.getX() + ", Y: " + unit.getY() + ") " + "XP: " + unit.getXp());
        }
    }

    public void endTurn() {
        Console.addEvent("üîπ –•–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–µ—Ä–µ—Ö–æ–¥ —Ö–æ–¥–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É.");
        for (Unit unit : playerUnits) {
            unit.startNewTurn();
        }
        selectedUnit = null;
    }

    public void placePlayerUnits(){
        int ind = 1;
        int end_ind = playerUnits.size();
        for(Unit u : playerUnits) {
            System.out.print("üîπ ‚Ññ" + ind + ") –†–∞–∑–º–µ—â–∞–µ–º —é–Ω–∏—Ç–∞. –û—Å—Ç–∞–ª–æ—Å—å –≤–æ–∏–Ω–æ–≤: " + (end_ind-ind+1));
            System.out.print("üîπ –í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è " + u.getType() +" (X Y): ");
            int x = scanner.nextInt();
            int y = scanner.nextInt();
            scanner.nextLine();

            renderer.placePlayerUnit(u, x, y);
            ind++;
        }
    }
}
